summary(data$square_feet)
data %>%
arrange(desc(review_score_rating))
data %>%
arrange(desc(review_scores_rating))
data %>%
arrange(desc(review_scores_rating)) %>%
select(name, review_scores_rating) %>%
head(15)
data %>%
arrange(review_scores_rating) %>%
select(name, review_scores_rating) %>%
head(15)
data %>%
mutate(review_score = number_of_reviews * review_scores_rating %>%)
data %>%
mutate(review_score = number_of_reviews * review_scores_rating) %>%
arrange(review_score) %>%
select(name, review_score) %>%
head(15)
data %>%
select(price) %>%
head(15)
data %>%
mutate(price = str_replace("$","")
data %>%
mutate(price = str_replace("$",""))
data %>%
mutate(price = str_replace(price, "$",""))
data %>%
mutate(price = str_replace(price, "$","")) %>%
select(price) %>%
head(15)
data %>%
mutate(price = str_replace(price,'$','')) %>%
select(price) %>%
head(15)
data %>%
mutate(price = str_replace_all(price,'$','')) %>%
select(price) %>%
head(15)
val <- "$85"
str_replace(val,"$","")
val <- "$85"
str_replace(val,"\\$","")
data %>%
mutate(price = str_replace_all(price,'\\$','')) %>%
select(price) %>%
head(15)
data %>%
mutate(price = as.double(str_replace_all(price,'\\$',''))) %>%
select(price) %>%
head(15)
data %>%
mutate(price = as.double(str_replace_all(price,'\\$',''))) %>%
select(price) %>%
head(100)
data <- data %>%
mutate(price = as.double(str_replace_all(price,'\\$','')))
summary(data$price)
data %>%
ggplot() +
geom_point(aes(x=review_scores_ranking, y=price))
data %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price))
data %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price)) +
facet_wrap(~host_neightborhood)
data %>%
filter(host_neighbourhood == "Capitol Hill") %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price))
data %>%
mutate(price_per_bed = price / beds) %>%
select(price_per_bed)
data <- data %>%
mutate(price_per_bed = price / beds)
data %>%
filter(host_neighbourhood == "Capitol Hill") %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed))
data %>%
filter(host_neighbourhood == "Capitol Hill") %>%
ggplot() +
geom_point(aes(x=number_of_reviews, y=price_per_bed))
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed))
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot(position="jitter") +
geom_point(aes(x=review_scores_rating, y=price_per_bed))
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter")
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=host_response_rate),
position = "jitter")
describe(data$host_response_rate)
summary(data$host_response_rate)
unique(data$host_response_rate)
summary(data$host_response_rate)
unique(data$host_response_rate)
table(is.na(data$host_response_rate))
unique(data$host_response_rate)
data <- data %>%
mutate(host_response_rate = as.double(str_replace_all(price,'%','')))
summary(data$host_response_rate)
data %>%
arrage(desc(host_response_rate))
data %>%
arrange(desc(host_response_rate))
library(tidyverse)
library(dplyr)
library(stringr)
data <- read_csv("../air_bnb_data/listings.csv")
data <- data %>%
mutate(price = as.double(str_replace_all(price,'\\$','')))
data <- data %>%
mutate(price_per_bed = price / beds)
data <- data %>%
mutate(host_response_rate_converted = as.double(str_replace_all(host_response_rate,'%','')))
data %>%
arrange(desc(host_response_rate_converted)) %>%
select(host_response_rate, host_response_rate_converted) %>%
head(15)
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=host_response_rate_converted),
position = "jitter")
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter")
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 5) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter") +
facet_wrap(~property_type)
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 2) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter") +
facet_wrap(~property_type)
data %>%
filter(
host_neighbourhood == "Capitol Hill",
number_of_reviews > 10) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter") +
facet_wrap(~property_type)
data %>%
filter(number_of_reviews > 10) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter") +
facet_wrap(~property_type)
boxplot(data$price_per_bed, plot=FALSE)$out
outliers <- boxplot(data$price_per_bed, plot=FALSE)$out
data <- data[-which(data$price_per_bed %in% outliers),]
data %>%
filter(number_of_reviews > 10) %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter") +
facet_wrap(~property_type)
data %>%
filter(
number_of_reviews > 10,
room_type == "Entire home/apt") %>%
ggplot() +
geom_point(aes(x=review_scores_rating, y=price_per_bed),
position = "jitter") +
facet_wrap(~property_type)
library(tidyverse)
library(openintro)
data('hfi', package='openintro')
dim(data)
View(data)
dim(hfi)
View(hfi)
data %>%
ggplot(aes(x=pf_rol_civil, y=pf_score)) +
geom_point()
hfi %>%
ggplot(aes(x=pf_rol_civil, y=pf_score)) +
geom_point()
hfi %>%
ggplot(aes(x=pf_expression_control, y=pf_score)) +
geom_point()
hfi %>%
ggplot(aes(x=pf_expression_control, y=pf_score)) +
geom_point(position="jitter")
hfi %>%
summarise(cor(pf_expression_control, pf_score, use = "complete.obs"))
# This will only work interactively (i.e. will not show in the knitted document)
hfi <- hfi %>% filter(complete.cases(pf_expression_control, pf_score))
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
DATA606::plot_ss(x = hfi$pf_expression_control, y = hfi$pf_score, showSquares = TRUE)
m1 <- lm(pf_score ~ pf_expression_control, data = hfi)
summary(m1)
m2 <- lm(hf_score ~ pf_expression_control, data=hfi)
summary(m2)
ggplot(data = hfi, aes(x = pf_expression_control, y = pf_score)) +
geom_point() +
stat_smooth(method = "lm", se = FALSE)
m1.predict(6.7)
predict(m1, 6.7)
new <- data.frame(x = seq(-3, 3, 0.5))
predict(m1, new)
new <- data.frame(pf_expression_control = seq(-3, 3, 0.5))
predict(m1, new)
new <- data.frame(pf_expression_control = 6.7)
predict(m1, new)
hfi %>%
filter(
pf_expression_control == 6.7
)
hfi %>%
filter(
between(pf_expression_control, 6.5,7)
)
hfi %>%
filter(
between(pf_expression_control, 6.5,7)
) %>%
select(pf_expression_control, pf_score)
hfi %>%
filter(
between(pf_expression_control, 6.5,7)
) %>%
select(pf_expression_control, pf_score) %>%
arrange(desc(pf_expression_control))
hfi %>%
filter(
pf_expression_control == 6.75
) %>%
summary(
mean_response = mean(pf_score)
)
hfi %>%
filter(
pf_expression_control == 6.75
) %>%
select (pf_score) %>%
summary(
mean_response = mean(pf_score)
)
View(m1)
View(m1)
ggplot(data = m1, aes(x = .fitted, y = .resid)) +
geom_point() +
geom_hline(yintercept = 0, linetype = "dashed") +
xlab("Fitted values") +
ylab("Residuals")
View(m1)
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 25) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 100) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 1) +
xlab("Residuals")
ggplot(data = m1, aes(x = .resid)) +
geom_histogram(binwidth = 2) +
xlab("Residuals")
ggplot(data = m1, aes(sample = .resid)) +
stat_qq()
hfi %>%
ggplot(aes(x=pf_religion_harassment, y=pf_religion)) +
geom_point(position="jitter")
m3 <- lm(pf_religion ~ pf_religion_harassment, data=hfi)
summary(m3)
hfi %>%
ggpot(aes(x=ef_legal_police, y=ef_legal_crime)) +
geom_point(position="jitter")
hfi %>%
ggplot(aes(x=ef_legal_police, y=ef_legal_crime)) +
geom_point(position="jitter")
m4 <- lm(ef_legal_crime ~ ef_legal_police, data=hfi)
summary(m4)
hfi %>%
ggplot(aes(x=ef_legal_enforcement, y=ef_legal_crime)) +
geom_point(position="jitter")
m4 <- lm(ef_legal_crime ~ ef_legal_enforcement, data=hfi)
summary(m4)
knitr::opts_chunk$set(echo = TRUE)
library(openintro)
# load data ---------------------------------------------------------
starbucks <- read.csv("https://github.com/jbryer/DATA606Fall2019/raw/master/course_data/starbucks.csv")
# model calories vs. carbos -----------------------------------------
m_carb_cals <- lm(carb ~ calories, data = starbucks)
# plot calories vs. carbos ------------------------------------------
par(mar = c(3.5, 4, 1, 0.5), las = 1, mgp = c(2.5, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5)
plot(carb ~ calories, data = starbucks,
pch = 19, col = COL[1,2],
xlab = "Calories", ylab = "Carbs (grams)", axes = FALSE)
axis(1)
axis(2, at = seq(20, 80, 20))
box()
abline(m_carb_cals, col = COL[2], lwd = 2)
# plot residuals ----------------------------------------------------
par(mar = c(3.5, 4, 1, 0.5), las = 1, mgp = c(2.5, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5)
plot(m_carb_cals$residuals ~ starbucks$calories,
xlab = "Calories", ylab = "Residuals",
col = COL[1,2], pch = 19,
ylim = c(-30, 30), axes = FALSE)
axis(1)
axis(2, at = seq(-20, 20, 20))
box()
abline(h = 0, lty = 2)
# histogram of residuals --------------------------------------------
par(mar = c(3.5, 2.5, 0.5, 0.5), las = 1, mgp = c(2.5, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5)
hist(m_carb_cals$residuals,
col = COL[1],
xlab = "Residuals", ylab = "", main = "",
axes = FALSE, xlim = c(-40,40))
axis(1, at = seq(-40, 40, 20))
axis(2)
# load packages -----------------------------------------------------
library(openintro)
# load data ---------------------------------------------------------
data(bdims)
# plot height vs. shoulder girth ------------------------------------
par(mar = c(3.8, 3.8, 0.5, 0.5), las = 1, mgp = c(2.7, 0.7, 0),
cex.lab = 1.25, cex.axis = 1.25)
plot(bdims$hgt ~ bdims$sho_gi,
xlab = "Shoulder girth (cm)", ylab = "Height (cm)",
pch = 19, col = COL[1,2])
(9.41/10.37)*0.67
171.14 - 0.607*107.20
0.6079749^2
0.607*100 + 106.6
# load packages -----------------------------------------------------
library(openintro)
library(xtable)
library(MASS)
# load data ---------------------------------------------------------
data(cats)
# model heart weight vs. weight -------------------------------------
m_cats_hwt_bwt <- lm(cats$Hwt ~ cats$Bwt)
# plot heart weight vs. weight --------------------------------------
par(mar = c(3.7, 3.7, 0.5, 0.5), las = 1, mgp = c(2.5, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5)
plot(cats$Hwt ~ cats$Bwt,
xlab = "Body weight (kg)", ylab = "Heart weight (g)",
pch = 19, col = COL[1,2],
xlim = c(2,4), ylim = c(5, 20.5), axes = FALSE)
axis(1, at = seq(2, 4, 0.5))
axis(2, at = seq(5, 20, 5))
box()
summary(m_cats_hwt_bwt)
sqrt(.6441)
# load packages -----------------------------------------------------
library(openintro)
# load data ---------------------------------------------------------
prof_evals_beauty <- read.csv("https://github.com/jbryer/DATA606Fall2019/raw/master/course_data/prof_evals_beauty.csv")
# rename variables for convenience ----------------------------------
beauty <- prof_evals_beauty$btystdave
eval <- prof_evals_beauty$courseevaluation
# model evaluation scores vs. beauty --------------------------------
m_eval_beauty = lm(eval ~ beauty)
# scatterplot of evaluation scores vs. beauty -----------------------
par(mar = c(3.9, 3.9, 0.5, 0.5), las = 0, mgp = c(2.7, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5, las = 1)
plot(eval ~ beauty,
xlab = "Beauty", ylab = "Teaching evaluation",
pch = 19, col = COL[1,2],
axes = FALSE)
axis(1, at = seq(-1, 2, 1))
axis(2, at = seq(2, 5, 1))
box()
summary(m_eval_beauty)
# residuals plot ----------------------------------------------------
par(mar = c(3.9, 3.9, 0.5, 0.5), las = 0, mgp = c(2.7, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5, las = 1)
plot(m_eval_beauty$residuals ~ beauty,
xlab = "Beauty", ylab = "Residuals",
pch = 19, col = COL[1,2],
ylim = c(-1.82, 1.82), axes = FALSE)
axis(1, at = seq(-1, 2, 1))
axis(2, at = seq(-1, 1, 1))
box()
abline(h = 0, lty = 3)
# residuals histogram -----------------------------------------------
par(mar = c(3.9, 3, 0, 0), cex.lab = 1.5, cex.axis = 1.5)
hist(m_eval_beauty$residuals,
xlab = "Residuals", ylab = "", main = "",
col = COL[1],
xlim = c(-2,2))
# normal probability plot of residuals ------------------------------
par(mar = c(3.9, 3.9, 0.5, 0.5), mgp = c(2.7, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5)
qqnorm(m_eval_beauty$residuals,
pch = 19, col = COL[1,2],
main = "", las = 0)
qqline(m_eval_beauty$residuals, col = COL[1])
# order of residuals ---------------------------------------------===
par(mar = c(3.9, 3.9, 0.5, 0.5), mgp = c(2.7, 0.7, 0),
cex.lab = 1.5, cex.axis = 1.5)
plot(m_eval_beauty$residuals,
xlab = "Order of data collection", ylab = "Residuals", main = "",
pch = 19, col = COL[1,2],
ylim = c(-1.82, 1.82), axes = FALSE)
axis(1)
axis(2, at = seq(-1, 1, 1))
box()
abline(h = 0, lty = 3)
get hep
getwd()
setwd("/Users/alecmccabe/Desktop/Masters Program/DATA 607/masters_607/projects/project_4")
knitr::opts_chunk$set(echo = TRUE)
files <- list.files(path="data/east_ham_2/")
files <- list.files(path="data/easy_ham_2")
library(stringr)
library(tidyverse)
library(dplyr)
sample_file = str_c("data/easy_ham_2/",files[1])
read.table(sample_file)
read_csv(sample_file)
read_lines(sample_file)
unnest(c(read_lines(sample_file)))
sample_file = str_c("data/easy_ham_2/",files[1])
unnest(read_lines(sample_file))
unnest(read_lines(sample_file))
ham_files <- list.files(path="data/easy_ham_2", full.names = TRUE)
ham <- ham_files %>%
as.data.frame() %>%
set_colnames("file") %>%
mutate(text = lapply(ham_files, read_lines)) %>%
unnest(c(text)) %>%
mutate(class = "ham",
spam = 0) %>%
group_by(file) %>%
mutate(text = paste(text, collapse = " ")) %>%
ungroup() %>%
distinct()
ham <- ham_files %>%
as.data.frame()
View(ham)
View(ham)
ham <- ham_files %>%
as.data.frame() %>%
rename(. = files)
ham <- ham_files %>%
as_tibble()
View(ham)
ham <- ham_files %>%
as_tibble() %>%
rename(value = files)
ham <- ham_files %>%
as_tibble() %>%
rename(value = file_path)
ham <- ham_files %>%
as_tibble() %>%
rename(file_path = values)
View(ham)
ham <- ham_files %>%
as_tibble() %>%
rename(file_path = value)
View(ham)
ham <- ham_files %>%
as_tibble() %>%
rename(file_path = value) %>%
mutate(text = lapply(ham_files, read_lines)) %>%
unnest(c(text))
ham <- ham_files %>%
as_tibble() %>%
rename(file_path = value) %>%
mutate(text = lapply(ham_files, read_lines))
lapply(ham_files, read_lines)
5+5
